@model IEnumerable<Score>
@using System.Globalization
@using HD_Veriler.Helpers
@using Microsoft.EntityFrameworkCore;

@{
    ViewData["Title"] = "ListScores";
    Layout = "~/Views/Shared/DefaultLayout.cshtml";
    var context = DbContextHelper.CreateContext();
}

<div class="container">
    <div class="row mb-4">
        <div class="col-md-12">
            <h5>Yıllar ve Aylar</h5>
            <div class="row">
                @{
                    int startYear = 2022; // Başlangıç yılı isteğe bağlı olarak belirlenebilir
                    int currentYear = DateTime.Now.Year;

                    for (int year = currentYear; year >= startYear; year--)
                    {
                        <div class="col-md-2">
                            <h6>@year</h6>
                            <div class="btn-group-vertical">
                                @for (int month = 1; month <= 12; month++)
                                {
                                    <button type="button" class="btn btn-secondary" onclick="filterScores(@Model.FirstOrDefault()?.UserID, @year, @month)">@CultureInfo.CurrentCulture.DateTimeFormat.GetMonthName(month)</button>
                                }
                            </div>
                        </div>
                    }
                }
            </div>
        </div>
    </div>

    <div id="scoreDetails">
        @if (Model != null && Model.Any())
        {
            <table class="table">
                <thead>
                    <tr>
                        <th>Kullanıcı ID</th>
                        <th>Soru ID</th>
                        <th>Cevap</th>
                        <th>Puan</th>
                        <th>Tarih</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var score in Model)
                    {
                        <tr>
                            @{
                                string? user = context.Users.FirstOrDefault(u => u.UserID == score.UserID)?.NameSurname;
                                string? question = context.uQuestions.FirstOrDefault(q => q.QuestionID == score.QuestionID)?.Question;
                            }
                            <td>@user</td>
                            <td>@question</td>
                            <td>@score.Answer</td>
                            <td>@score.Point</td>
                            <td>@score.AnswerDate.ToString("dd.MM.yyyy")</td>
                        </tr>
                    }
                </tbody>
            </table>
        }
        else
        {
            <p>@ViewBag.ErrorMessage</p>
        }
    </div>
</div>

<script>
    function filterScores(userId, year, month) {
        var url = '@Url.Action("ListScores", "Score")' + '?id=' + userId + '&year=' + year + '&month=' + month;

        // AJAX ile kontrol edelim
        $.ajax({
            url: url,
            type: "GET",
            dataType: "html",
            success: function (data) {
                // Veri varsa tabloyu güncelle
                var scoreDetails = $('#scoreDetails');
                if (scoreDetails.find('table').length > 0) {
                    // Tablo zaten varsa, içeriği güncelle
                    scoreDetails.find('table').replaceWith($(data).find('table'));
                } else {
                    // Tablo yoksa, içeriği ekle
                    scoreDetails.html(data);
                }
            },
            error: function () {
                alert("Veriye erişirken bir hata oluştu.");
            }
        });
    }
</script>
